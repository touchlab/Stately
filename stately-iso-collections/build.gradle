/*
 * Copyright (C) 2018 Touchlab, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

apply plugin: 'org.jetbrains.kotlin.multiplatform'

group = GROUP
version = VERSION_NAME_NEWSTUFF
def ideaActive = System.getProperty('idea.active') == 'true'

kotlin {
    jvm()
    js {
        browser()
        nodejs {
            testTask {
                useMocha {
                    // Override default timeout (needed for stress tests)
                    timeout = "120s"
                }
            }
        }
    }

    if (ideaActive) {
        macosX64("nativeCommon")
    } else {
        macosX64()
        iosArm32()
        iosArm64()
        iosX64()
        linuxX64()
        linuxArm32Hfp()
        linuxMips32()
        watchosArm32()
        watchosArm64()
        watchosX86()
        tvosArm64()
        tvosX64()
        //    androidNativeArm32()
        //    androidNativeArm64()
        mingwX64()
    }

    sourceSets {
        commonMain {
            dependencies {
                implementation project(":stately-common")
                implementation project(":stately-concurrency")
                implementation project(":stately-isolate")
//                implementation "co.touchlab:kapture-annotations:$KAPTURE_VERSION"

                implementation kotlin('stdlib-common')
            }
        }

        commonTest {
            dependencies {
                implementation kotlin('test-common')
                implementation kotlin('test-annotations-common')
                implementation "co.touchlab:testhelp:$TESTHELP_VERSION"
            }
        }

        jvmMain {
            dependsOn commonMain
            dependencies {
                implementation kotlin('stdlib-jdk8')
            }
        }
        jvmTest {
            dependsOn commonTest
            dependencies {
                implementation kotlin('test')
                implementation kotlin('test-junit')
            }
        }

        jsMain {
            dependsOn commonMain
            dependencies {
                implementation kotlin('stdlib-js')
            }
        }
        jsTest {
            dependsOn commonTest
            dependencies {
                implementation kotlin('test-js')
            }
        }

        nativeCommonMain {
            dependencies {
            }
        }

        nativeCommonTest {
        }

        if (!ideaActive) {
            configure([targets.iosX64,
                       targets.iosArm32,
                       targets.iosArm64,
                       targets.macosX64,
                       targets.watchosArm32,
                       targets.watchosArm64,
                       targets.watchosX86,
                       targets.tvosArm64,
                       targets.tvosX64,
                       targets.linuxX64,
                       targets.linuxArm32Hfp,
                       targets.linuxMips32,
                       targets.mingwX64]) {
                compilations.main.source(sourceSets.nativeCommonMain)
                compilations.test.source(sourceSets.nativeCommonTest)
            }
        }
    }
}

configurations {
    compileClasspath
}

apply from: '../gradle/gradle-mvn-mpp-push.gradle'
