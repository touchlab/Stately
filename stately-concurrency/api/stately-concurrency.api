public final class co/touchlab/stately/concurrency/AtomicBoolean {
	public fun <init> (Z)V
	public final fun compareAndSet (ZZ)Z
	public final fun getValue ()Z
	public final fun setValue (Z)V
}

public final class co/touchlab/stately/concurrency/AtomicIntKt {
	public static final fun getValue (Ljava/util/concurrent/atomic/AtomicInteger;)I
	public static final fun setValue (Ljava/util/concurrent/atomic/AtomicInteger;I)V
}

public final class co/touchlab/stately/concurrency/AtomicLongKt {
	public static final fun getValue (Ljava/util/concurrent/atomic/AtomicLong;)J
	public static final fun setValue (Ljava/util/concurrent/atomic/AtomicLong;J)V
}

public final class co/touchlab/stately/concurrency/AtomicReferenceKt {
	public static final fun getValue (Ljava/util/concurrent/atomic/AtomicReference;)Ljava/lang/Object;
	public static final fun setValue (Ljava/util/concurrent/atomic/AtomicReference;Ljava/lang/Object;)V
}

public final class co/touchlab/stately/concurrency/LockIntActual {
	public static final fun close (Ljava/util/concurrent/locks/ReentrantLock;)V
}

public final class co/touchlab/stately/concurrency/LockKt {
	public static final fun withLock (Ljava/util/concurrent/locks/ReentrantLock;Lkotlin/jvm/functions/Function0;)Ljava/lang/Object;
}

public final class co/touchlab/stately/concurrency/SynchronizableKt {
	public static final fun synchronize (Ljava/lang/Object;Lkotlin/jvm/functions/Function0;)Ljava/lang/Object;
}

public final class co/touchlab/stately/concurrency/ThreadLocalKt {
	public static final fun getValue (Ljava/lang/ThreadLocal;)Ljava/lang/Object;
	public static final fun setValue (Ljava/lang/ThreadLocal;Ljava/lang/Object;)V
}

public final class co/touchlab/stately/concurrency/ThreadRef {
	public fun <init> ()V
	public final fun same ()Z
}

